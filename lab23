string answer_from_user;
    string next;
    int n;
    noode* root = NULL;
    cout << "Вы хотите создть бинарное дерево поиска???\n";
    cin >> answer_from_user;
    if (answer_from_user == "да") {
        cout << "Дерево создано!!!\n";
    } else {
        cout << "До скорых встреч!!!" << endl;
        root = nullptr;
        return 0;
    }
    
    cout << "Хотите выполнить какую-либо операцию над деревом???\n";
    cin >> answer_from_user;
    if (answer_from_user == "да") {
        link2:
        cout << "Я умею выполнять следующие операции:\n";
        cout << "1. Добавлять элемент/элементы в дерево\n";
        cout << "2. Искать элемент в дереве\n";
        cout << "3. Удалять элемент из дерева\n";
        cout << "4. Считать количество вершин в дереве\n";
        cout << "5. Выводить дерево в терминал\n";
        //с помощью регулярок 1,2,3,4,5 или один и т.д.
        link:
        cin >> answer_from_user;
        if (answer_from_user == "1") {
            cout << "Введите количество элементов, которые хотите добавить: ";
            cin >> n;
            int a[n];
            cout << "Введите элементы: ";
            for (int i = 0; i < n; ++i) {
                cin >> a[i];
            }
            if (root == NULL) {
                root = create_tree_elem(a[0]);
                for (int i = 1; i < n; ++i) {
                    noode* temp = create_tree_elem(a[i]);
                    insert_tree(root, temp);
                }
                cout << "Элементы добавлены" << '\n';
            } else {
                for (int i = 0; i < n; ++i) {
                    noode* temp = create_tree_elem(a[i]);
                    insert_tree(root, temp);
                }
                cout << "Элементы добавлены" << '\n';
            }
            
            cout << "Хотите продолжить?\n";
            cin >> next;
            if (next == "да") {
                goto link2;
            } else {
                cout << "Хорошего дня!" << endl;
            }
        }
        
        else if (answer_from_user == "2") {
            int ell;
            cout << "Введите элемент, который хотите проверить: ";
            cin >> ell;
            noode* temp = serch_elem_in_tree(root, ell);
            if (temp == NULL) cout << "Такого элемента не существует(\n";
            else cout << "Такой элемент существует)\n";
            
            cout << "Хотите продолжить?\n";
            cin >> next;
            if (next == "да") {
                goto link2;
            } else {
                cout << "Хорошего дня!" << endl;
            }
        }
        
        else if (answer_from_user == "3") {
            int ell;
            cout << "Введите элемент, который хотите удалить: ";
            cin >> ell;
            delete_elem_from_tree(root, ell);
            cout << "Элемент удален\n";
            
            cout << "Хотите продолжить?\n";
            cin >> next;
            if (next == "да") {
                goto link2;
            } else {
                cout << "Хорошего дня!" << endl;
            }
        }
        
        else if (answer_from_user == "4") {
            cout << "Количество вершин в дереве: " << quantity_elem_in_tree(root) << '\n';
            cnt = 1;
            
            cout << "Хотите продолжить?\n";
            cin >> next;
            if (next == "да") {
                goto link2;
            } else {
                cout << "Хорошего дня!" << endl;
            }
        }
        
        else if (answer_from_user == "5") {
            print_tree(root);
            tabs = 0;
            
            cout << "Хотите продолжить?\n";
            cin >> next;
            if (next == "да") {
                goto link2;
            } else {
                cout << "Хорошего дня!" << endl;
            }
        }
        
        else {
            cout << "Я Вас не понял, можете повторить свой ответ" << '\n';
            goto link;
        }
        
    } else {
        cout << "Рад был помочь!!!" << '\n';
    }
